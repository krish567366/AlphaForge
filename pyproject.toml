[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "alphaforge"
version = "1.0.0"
description = "High-performance algorithmic trading platform created by Krishna Bajpai and Vedanshi Gupta"
authors = [
    {name = "Krishna Bajpai", email = "krishna@krishnabajpai.me"},
    {name = "Vedanshi Gupta", email = "vedanshigupta158@gmail.com"},
]
maintainers = [
    {name = "Krishna Bajpai", email = "krishna@krishnabajpai.me"},
    {name = "Vedanshi Gupta", email = "vedanshigupta158@gmail.com"},
]
license = {text = "MIT"}
readme = "README.md"
homepage = "https://github.com/krish567366/AlphaForge"
repository = "https://github.com/krish567366/AlphaForge"
documentation = "https://github.com/krish567366/AlphaForge/blob/main/docs"
keywords = [
    "trading",
    "algorithmic", 
    "finance",
    "high-frequency",
    "market-data",
    "execution",
    "backtesting",
    "rust",
    "python",
    "quantitative",
    "hft",
    "low-latency"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12", 
    "Programming Language :: Rust",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "msgpack>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "maturin>=1.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0", 
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.0.0",
]
performance = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "jupyter>=1.0.0",
]

[project.urls]
"Homepage" = "https://github.com/krish567366/AlphaForge"
"Bug Reports" = "https://github.com/krish567366/AlphaForge/issues"
"Source" = "https://github.com/krish567366/AlphaForge"
"Documentation" = "https://github.com/krish567366/AlphaForge/blob/main/docs"
"Changelog" = "https://github.com/krish567366/AlphaForge/blob/main/CHANGELOG.md"

[tool.maturin]
# Build from the pyo3 crate containing the Python bindings
manifest-path = "crates/pyo3/Cargo.toml"
# Include Python files from the python directory
python-source = "python"
# Module name for the Rust extension
module-name = "alphaforge._core"
# Use extension module features
features = ["pyo3/extension-module"]
# Strip debug symbols for smaller binary
strip = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
    "python/tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance benchmarks",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["E501", "F401", "F811"]

[tool.coverage.run]
source = ["alphaforge"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
